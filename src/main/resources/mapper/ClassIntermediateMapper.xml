<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tzcpa.mapper.treatment.ClassIntermediateMapper">

    <resultMap id="ClassIntermediateResultMap" type="com.tzcpa.model.treatment.ClassIntermediateDO">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="class_id" property="classId" jdbcType="INTEGER"/>
        <result column="year" property="year" jdbcType="INTEGER"/>
        <result column="month" property="month" jdbcType="INTEGER"/>
        <result column="vehicle_model_group" property="vehicleModelGroup" jdbcType="VARCHAR"/>
        <result column="vehicle_model" property="vehicleModel" jdbcType="VARCHAR"/>
        <result column="benchmark_sales" property="benchmarkSales" jdbcType="BIGINT"/>
        <result column="benchmark_unit_price" property="benchmarkUnitPrice" jdbcType="BIGINT"/>
        <result column="benchmark_sales_price" property="benchmarkSalesPrice" jdbcType="BIGINT"/>
        <result column="benchmark_unit_material_cost" property="benchmarkUnitMaterialCost" jdbcType="BIGINT"/>
        <result column="benchmark_materials_cost_total" property="benchmarkMaterialsCostTotal" jdbcType="BIGINT"/>
    </resultMap>

    <!-- 初始化班级中间表数据 -->
    <insert id="initClassIntermediate" parameterType="int">
        INSERT INTO t_class_intermediate (
            class_id,
            YEAR,
            MONTH,
            vehicle_model_group,
            vehicle_model,
            benchmark_sales,
            benchmark_unit_price,
            benchmark_sales_price,
            benchmark_unit_material_cost,
            benchmark_materials_cost_total,
            market_shares
            ) SELECT
            #{classId},
            t1.`year`,
            t1.`month`,
            (CASE
                WHEN (
                    t1.vehicle_model = 'h6'
                    OR t1.vehicle_model = 'h8'
                    OR t1.vehicle_model = 'wey'
                ) THEN
                    'suv'
                ELSE
                    t1.vehicle_model
                END) as vehicle_model_group,
            t1.vehicle_model,
            t1.benchmark_sales,
            t1.benchmark_unit_price,
            ROUND(t1.benchmark_sales * t1.benchmark_unit_price) AS benchmark_sales_price,
            t2.unit_cost AS benchmark_unit_material_cost,
            ROUND(t1.benchmark_sales * t2.unit_cost) AS benchmark_materials_cost_total,
            (case when t3.market_shares is null then 0 else t3.market_shares end) as market_shares
            FROM
            t_conf_sales_univalence t1
            INNER JOIN t_conf_cost_quote t2 ON t1. YEAR = t2. YEAR
            AND t1.vehicle_model = t2.vehicle_model
            <![CDATA[
            AND (
            t1.benchmark_sales >= t2.sales_range_min
            AND t1.benchmark_sales < t2.sales_range_max
            )
            ]]>
            LEFT JOIN t_conf_market_shares t3
            on t1.`year`=t3.`year`
            and t1.`month`=t3.`month`
            and t1.vehicle_model=t3.vehicle_model
            <!-- where t1.benchmark_sales != 0 -->
    </insert>
</mapper>