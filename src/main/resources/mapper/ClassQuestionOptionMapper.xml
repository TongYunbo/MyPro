<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tzcpa.mapper.treatment.ClassQuestionOptionMapper">

    <resultMap id="ClassQuestionOptionResultMap" type="com.tzcpa.model.treatment.ClassQuestionOptionDO">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="question_id" property="questionId" jdbcType="INTEGER"/>
        <result column="quesion_option" property="quesionOption" jdbcType="VARCHAR"/>
        <result column="quesion_option_desc" property="quesionOptionDesc" jdbcType="VARCHAR"/>
        <result column="target_value" property="targetValue" jdbcType="VARCHAR"/>
        <result column="class_id" property="classId" jdbcType="INTEGER"/>
    </resultMap>

    <insert id="insert" parameterType="com.tzcpa.model.treatment.ClassQuestionOptionDO" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_class_question_option (question_id, quesion_option, quesion_option_desc,
        target_value, class_id, create_time,
        unit, balance_score_func,team_id)
        values (#{questionId,jdbcType=INTEGER}, #{quesionOption,jdbcType=VARCHAR}, #{quesionOptionDesc,jdbcType=VARCHAR},
        #{targetValue,jdbcType=VARCHAR}, #{classId,jdbcType=INTEGER}, CURRENT_TIMESTAMP(),
        #{unit,jdbcType=VARCHAR}, #{balanceScoreFunc,jdbcType=VARCHAR},#{teamId,jdbcType=INTEGER})
    </insert>

    <insert id="initClassQuestionOption" parameterType="int">
		INSERT INTO t_class_question_option (
			question_id,
			quesion_option,
			quesion_option_desc,
			option_desc,
			target_value,
			unit,
			balance_score_func,
			class_id
		) SELECT
			question_id,
			quesion_option,
			quesion_option_desc,
			option_desc,
			target_value,
			unit,
			balance_score_func,
			#{classId}
		FROM
			t_conf_question_option
    </insert>
    <!--hanxf 20190704 -->
    <insert id="insertQuestionMonth" >
        insert into t_class_question_month (
            id,
            class_id,
            current_month,
            CREATE_time,
            CREATE_Person
        )
        SELECT
            UUID(),
            tcef.class_id,
            tcef.time_line,
            CURRENT_TIMESTAMP,
            #{account}
        FROM
            t_class_event_flow tcef
        LEFT JOIN t_class_question_month tcqm ON tcef.class_id = tcqm.class_id
        AND date_format(tcef.time_line, '%Y-%m-%d') = date_format(tcqm.current_month,'%Y-%m-%d')
        WHERE
            tcef.class_id = #{classId} and tcqm.id IS NULL and tcef.is_show = 0
        GROUP BY
            tcef.class_id,
            tcef.time_line
        ORDER BY
            tcef.time_line
        LIMIT 1

    </insert>

    <select id="getQuestionOptionsById" resultType="com.tzcpa.model.treatment.ClassQuestionOptionDO">
        SELECT
         tcqo.*,tcqo2.id lastId
        FROM
      ( SELECT * FROM t_class_question_desc tcqd
          WHERE tcqd.class_id = #{classId} AND tcqd.question_id = #{questionId}
         ) tcqd
         JOIN t_class_question_desc tcqd2 ON tcqd.class_id = tcqd2.class_id
        AND tcqd.question_id = tcqd2.parent_id
         JOIN t_class_question_option tcqo ON tcqd2.class_id = tcqo.class_id
        AND tcqd2.question_id = tcqo.question_id
        AND tcqo.team_id = 0
        AND tcqo.quesion_option = #{option}
        LEFT JOIN t_class_question_option tcqo2
       ON tcqo2.class_id = tcqo.class_id
        AND tcqo2.question_id = tcqo.question_id
        AND tcqo2.team_id = 0
        AND tcqo2.quesion_option = 2
        ORDER BY
         tcqo.question_id
    </select>

    <select id="getThirdQuestionOptionsById" resultType="com.tzcpa.model.treatment.ClassQuestionOptionDO">
      SELECT tcqo.* from
    (select * from t_class_question_desc tcqd where tcqd.class_id = #{classId}
    and tcqd.question_id = #{questionId})tcqd
    left join t_class_question_desc tcqd2
    on tcqd.class_id = tcqd2.class_id and tcqd.question_id = tcqd2.parent_id
    left join t_class_question_desc tcqd3
    on tcqd2.class_id = tcqd3.class_id and tcqd2.question_id = tcqd3.parent_id
      join  t_class_question_option tcqo
    on tcqd3.class_id = tcqo.class_id and tcqd3.question_id = tcqo.question_id
    and tcqo.team_id = 0
    where tcqo.quesion_option = #{option}
    ORDER BY tcqo.question_id
    </select>

    <!-- 根据题目id查询选项 -->
    <select id="getQuestionOptions" resultMap="ClassQuestionOptionResultMap">
        SELECT
            question_id,
            quesion_option,
            quesion_option_desc,
            target_value,
            class_id
        FROM
            t_class_question_option
        where class_id = #{classId}
        and question_id in 
        <foreach collection="questionIds" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <update id="update" parameterType="com.tzcpa.model.treatment.ClassQuestionOptionDO">
        update t_class_question_option
        <set >
        <if test="record.questionId != null" >
            question_id = #{record.questionId,jdbcType=INTEGER},
        </if>
        <if test="record.quesionOption != null" >
            quesion_option = #{record.quesionOption,jdbcType=VARCHAR},
        </if>
        <if test="record.quesionOptionDesc != null" >
            quesion_option_desc = #{record.quesionOptionDesc,jdbcType=VARCHAR},
        </if>
        <if test="record.targetValue != null" >
            target_value = #{record.targetValue,jdbcType=VARCHAR},
        </if>
        <if test="record.classId != null" >
            class_id = #{record.classId,jdbcType=INTEGER},
        </if>
        <if test="record.createTime != null" >
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="record.unit != null" >
            unit = #{record.unit,jdbcType=VARCHAR},
        </if>
        <if test="record.balanceScoreFunc != null" >
            balance_score_func = #{record.balanceScoreFunc,jdbcType=VARCHAR},
        </if>
        </set>
        where id = #{record.id,jdbcType=INTEGER}
    </update>
</mapper>