<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tzcpa.mapper.treatment.ClassSalesUnivalenceMapper" >
  <resultMap id="BaseResultMap" type="com.tzcpa.model.treatment.ClassSalesUnivalenceDO" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="year" property="year" jdbcType="INTEGER" />
    <result column="month" property="month" jdbcType="INTEGER" />
    <result column="vehicle_model" property="vehicleModel" jdbcType="VARCHAR" />
    <result column="benchmark_sales" property="benchmarkSales" jdbcType="BIGINT" />
    <result column="benchmark_unit_price" property="benchmarkUnitPrice" jdbcType="BIGINT" />
    <result column="class_id" property="classId" jdbcType="INTEGER" />
    <result column="benchmark_sales_price" property="benchmarkSalesPrice" jdbcType="BIGINT" />
    <result column="group_key" property="groupKey" jdbcType="VARCHAR" />
  </resultMap>
  <insert id="insert" parameterType="com.tzcpa.model.treatment.ClassSalesUnivalenceDO" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_class_sales_univalence (`year`, `month`, vehicle_model, 
      benchmark_sales, benchmark_unit_price, class_id
      )
    values (#{year,jdbcType=INTEGER}, #{month,jdbcType=INTEGER}, #{vehicleModel,jdbcType=VARCHAR}, 
      #{benchmarkSales,jdbcType=BIGINT}, #{benchmarkUnitPrice,jdbcType=BIGINT}, #{classId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tzcpa.model.treatment.ClassSalesUnivalenceDO" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_class_sales_univalence
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="year != null" >
        `year`,
      </if>
      <if test="month != null" >
        `month`,
      </if>
      <if test="vehicleModel != null" >
        vehicle_model,
      </if>
      <if test="benchmarkSales != null" >
        benchmark_sales,
      </if>
      <if test="benchmarkUnitPrice != null" >
        benchmark_unit_price,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="year != null" >
        #{year,jdbcType=INTEGER},
      </if>
      <if test="month != null" >
        #{month,jdbcType=INTEGER},
      </if>
      <if test="vehicleModel != null" >
        #{vehicleModel,jdbcType=VARCHAR},
      </if>
      <if test="benchmarkSales != null" >
        #{benchmarkSales,jdbcType=BIGINT},
      </if>
      <if test="benchmarkUnitPrice != null" >
        #{benchmarkUnitPrice,jdbcType=BIGINT},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <!-- 查询班级单价成本 -->
  <select id="selectClassSaleUnivalence" parameterType="int" resultMap="BaseResultMap">
    SELECT
        CONCAT(`year`, '_', vehicle_model) AS group_key,
        `year`,
        `month`,
        vehicle_model,
        benchmark_sales,
        benchmark_unit_price,
        benchmark_sales * benchmark_unit_price AS benchmark_sales_price
    FROM
        t_class_sales_univalence
    WHERE
        class_id = #{classId}
  </select>

  <!--初始化 班级销量单价-->
  <insert id="initClassSaleUnivalence" parameterType="int">
      INSERT INTO t_class_sales_univalence (
          YEAR,
          MONTH,
          vehicle_model,
          benchmark_sales,
          benchmark_unit_price,
          class_id
      ) SELECT
          YEAR,
          MONTH,
          vehicle_model,
          benchmark_sales,
          benchmark_unit_price,
          #{classId}
      FROM
          t_conf_sales_univalence
  </insert>
</mapper>